exit
page
Nokogiri::HTML.parse(doc)
@page
c
exit
"false" == "true"
"true" == "true"
row[4]
exit
scrapper.recipes.last
scrapper.recipes.count
scrapper.recipes
scapper.recipes
scrapper.perform
exit
{}[:done]
{}[:name]
elements.first.search(".teaser-item__info-item--skill-level").text.strip
elements.first.search(".teaser-item__info-item--total-time").text.strip
elements.first.search(".teaser-item__info-item--total-time").text
elements.first.search(".teaser-item__info-item--total-time")
elements.first.search(".field-type-text-with-summary").text
elements.first.search(".field-type-text-with-summary")
elements.count
elements.first.search("teaser-item__text-content")
element.first.search("teaser-item__text-content")
elements.first.search("field-type-text-with-summary")
elements.first.search("field-type-text-with-summary").text.strip
elements.first.search("h3").text.strip
elements.first.search("h3").text
elements.first.search("h3")
elements.count
elements
exit
elements.count
Recipe.class
Recipe.new
exit
@elements.count
@elements ||= page.search("#search-results article")
page.search("#search-results article").
page.search("#search-results article").count
page.search("article").count
page.class
exit
doc = open(@url).read
open(@url).read.class
open(@url).read
exit
Recipe.new(row[0], row[1]).class
Recipe.new(row[0], row[1])
Recipe.new
Recipe
row.class
row
c
recipe
c
recipe
